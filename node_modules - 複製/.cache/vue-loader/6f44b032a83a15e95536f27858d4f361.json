{"remainingRequest":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\mdbvue\\src\\components\\Tooltip.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\mdbvue\\src\\components\\Tooltip.vue","mtime":499162500000},{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.tooltip {\n  width: auto;\n  background-color: rgba(0, 0, 0, 0.85);\n  color: rgba(242, 239, 239, 0.95);\n  text-align: center;\n  padding: 0.24em 0.5em;\n  display: inline-block;\n  border-radius: 3px;\n  position: absolute;\n  font-size: 0.83em;\n  font-weight: normal;\n  z-index: 200000;\n  opacity: 0;\n  transition: opacity 0.2s, visibility 0.2s;\n  visibility: hidden;\n}\n\n.show > .tooltip {\n  opacity: 1;\n  visibility: visible;\n}\n\n.tooltip .tooltip_arrow {\n  width: 0;\n  height: 0;\n  border-style: solid;\n  position: absolute;\n  margin: 5px;\n}\n.tooltip[x-placement^=\"top\"] {\n  margin-bottom: 5px;\n}\n.tooltip[x-placement^=\"top\"] .tooltip_arrow {\n  border-width: 5px 5px 0 5px;\n  border-color:  rgba(0, 0, 0, 0.85) transparent transparent transparent;\n  bottom: -5px;\n  left: calc(50% - 5px);\n  margin-top: 0;\n  margin-bottom: 0;\n}\n.tooltip[x-placement^=\"bottom\"] {\n  margin-top: 5px;\n}\n.tooltip[x-placement^=\"bottom\"] .tooltip_arrow {\n  border-width: 0 5px 5px 5px;\n  border-color: transparent transparent rgba(0, 0, 0, 0.85) transparent;\n  top: -5px;\n  left: calc(50% - 5px);\n  margin-top: 0;\n  margin-bottom: 0;\n}\n.tooltip[x-placement^=\"right\"] {\n  margin-left: 5px;\n}\n.tooltip[x-placement^=\"right\"] .tooltip_arrow {\n  border-width: 5px 5px 5px 0;\n  border-color: transparent rgba(0, 0, 0, 0.85) transparent transparent;\n  left: -5px;\n  top: calc(50% - 5px);\n  margin-left: 0;\n  margin-right: 0;\n}\n.tooltip[x-placement^=\"left\"] {\n  margin-right: 5px;\n}\n.tooltip[x-placement^=\"left\"] .tooltip_arrow {\n  border-width: 5px 0 5px 5px;\n  border-color: transparent transparent transparent rgba(0, 0, 0, 0.85);\n  right: -5px;\n  top: calc(50% - 5px);\n  margin-left: 0;\n  margin-right: 0;\n}\n",{"version":3,"sources":["Tooltip.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Tooltip.vue","sourceRoot":"node_modules/mdbvue/src/components","sourcesContent":["<template>\r\n  <span>\r\n    <transition @after-leave=\"doDestroy\">\r\n      <span ref=\"popper\" :class=\"{show:!disabled && showPopper}\">\r\n        <div class=\"tooltip\" v-if=\"$slots.tip\" ref=\"tooltip\">\r\n          <slot name=\"tip\"></slot>\r\n        </div>\r\n        <slot></slot>\r\n      </span>\r\n    </transition>\r\n    <slot name=\"reference\"></slot>\r\n  </span>\r\n</template>\r\n\r\n<script>\r\n  import Popper from 'popper.js';\r\n\r\n  const on = function(element, event, handler) {\r\n    if (element && event && handler) {\r\n      document.addEventListener ? element.addEventListener(event, handler, false) : element.attachEvent('on' + event, handler);\r\n    }\r\n  };\r\n\r\n  const off = function(element, event, handler) {\r\n    if (element && event) {\r\n      document.removeEventListener ? element.removeEventListener(event, handler, false) : element.detachEvent('on' + event, handler);\r\n    }\r\n  };\r\n\r\n  const Tooltip = {\r\n    props: {\r\n      trigger: {\r\n        type: String,\r\n        default: 'hover',\r\n        validator: value => ['click', 'hover'].indexOf(value) > -1\r\n      },\r\n      delayOnMouseOut: {\r\n        type: Number,\r\n        default: 10,\r\n      },\r\n      disabled: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      content: String,\r\n      enterActiveClass: String,\r\n      leaveActiveClass: String,\r\n      boundariesSelector: String,\r\n      reference: {},\r\n      forceShow: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      appendToBody: {\r\n        type: Boolean,\r\n        default: false\r\n      },\r\n      visibleArrow: {\r\n        type: Boolean,\r\n        default: true\r\n      },\r\n      transition: {\r\n        type: String,\r\n        default: ''\r\n      },\r\n      options: {\r\n        type: Object,\r\n        default() {\r\n          return {};\r\n        }\r\n      }\r\n    },\r\n\r\n    data() {\r\n      return {\r\n        referenceElm: null,\r\n        popperJS: null,\r\n        showPopper: false,\r\n        currentPlacement: '',\r\n        popperOptions: {\r\n          placement: 'bottom',\r\n          gpuAcceleration: false\r\n        }\r\n      };\r\n    },\r\n\r\n    watch: {\r\n      showPopper(value) {\r\n        if (value) {\r\n          this.$emit('show');\r\n          this.updatePopper();\r\n        } else {\r\n          this.$emit('hide');\r\n        }\r\n      },\r\n\r\n      forceShow: {\r\n        handler(value) {\r\n          this[value ? 'doShow' : 'doClose']();\r\n        },\r\n        immediate: true\r\n      }\r\n    },\r\n\r\n    created() {\r\n      this.appendedArrow = false;\r\n      this.appendedToBody = false;\r\n      this.popperOptions = Object.assign(this.popperOptions, this.options);\r\n    },\r\n\r\n    mounted() {\r\n      this.referenceElm = this.reference || this.$slots.reference[0].elm;\r\n      this.tooltip =  this.$refs.tooltip || this.$slots.default[0].elm;\r\n\r\n      switch (this.trigger) {\r\n        case 'click':\r\n          on(this.referenceElm, 'click', this.doToggle);\r\n          on(document, 'click', this.handleDocumentClick);\r\n          break;\r\n        case 'hover':\r\n          on(this.referenceElm, 'mouseover', this.onMouseOver);\r\n          on(this.tooltip, 'mouseover', this.onMouseOver);\r\n          on(this.referenceElm, 'mouseout', this.onMouseOut);\r\n          on(this.tooltip, 'mouseout', this.onMouseOut);\r\n          break;\r\n      }\r\n    },\r\n\r\n    methods: {\r\n      doToggle() {\r\n        if (!this.forceShow) {\r\n          this.showPopper = !this.showPopper;\r\n        }\r\n      },\r\n\r\n      doShow() {\r\n        this.showPopper = true;\r\n      },\r\n\r\n      doClose() {\r\n        this.showPopper = false;\r\n      },\r\n\r\n      doDestroy() {\r\n        if (this.showPopper) {\r\n          return;\r\n        }\r\n\r\n        if (this.popperJS) {\r\n          this.popperJS.destroy();\r\n          this.popperJS = null;\r\n        }\r\n\r\n        if (this.appendedToBody) {\r\n          this.appendedToBody = false;\r\n          document.body.removeChild(this.tooltip.parentElement);\r\n        }\r\n      },\r\n\r\n      createPopper() {\r\n        this.$nextTick(() => {\r\n          if (this.visibleArrow) {\r\n            this.appendArrow(this.tooltip);\r\n          }\r\n\r\n          if (this.appendToBody && !this.appendedToBody) {\r\n            this.appendedToBody = true;\r\n            document.body.appendChild(this.tooltip.parentElement);\r\n          }\r\n\r\n          if (this.popperJS && this.popperJS.destroy) {\r\n            this.popperJS.destroy();\r\n          }\r\n\r\n          if (this.boundariesSelector) {\r\n            const boundariesElement = document.querySelector(this.boundariesSelector);\r\n\r\n            if (boundariesElement) {\r\n              this.popperOptions.modifiers = Object.assign({}, this.popperOptions.modifiers);\r\n              this.popperOptions.modifiers.preventOverflow = Object.assign({}, this.popperOptions.modifiers.preventOverflow);\r\n              this.popperOptions.modifiers.preventOverflow.boundariesElement = boundariesElement;\r\n            }\r\n          }\r\n\r\n          this.popperOptions.onCreate = () => {\r\n            this.$emit('created', this);\r\n            this.$nextTick(this.updatePopper);\r\n          };\r\n\r\n          this.popperJS = new Popper(this.referenceElm, this.tooltip, this.popperOptions);\r\n        });\r\n      },\r\n\r\n      destroyPopper() {\r\n        off(this.referenceElm, 'click', this.doToggle);\r\n        off(this.referenceElm, 'mouseup', this.doClose);\r\n        off(this.referenceElm, 'mousedown', this.doShow);\r\n        off(this.referenceElm, 'focus', this.doShow);\r\n        off(this.referenceElm, 'blur', this.doClose);\r\n        off(this.referenceElm, 'mouseout', this.onMouseOut);\r\n        off(this.referenceElm, 'mouseover', this.onMouseOver);\r\n        off(document, 'click', this.handleDocumentClick);\r\n\r\n        this.showPopper = false;\r\n        this.doDestroy();\r\n      },\r\n\r\n      appendArrow(element) {\r\n        if (this.appendedArrow) {\r\n          return;\r\n        }\r\n\r\n        this.appendedArrow = true;\r\n\r\n        const arrow = document.createElement('div');\r\n        arrow.setAttribute('x-arrow', '');\r\n        arrow.className = 'tooltip_arrow';\r\n        element.appendChild(arrow);\r\n      },\r\n\r\n      updatePopper() {\r\n        this.popperJS ? this.popperJS.scheduleUpdate() : this.createPopper();\r\n      },\r\n\r\n      onMouseOver() {\r\n        this.showPopper = true;\r\n        clearTimeout(this._timer);\r\n      },\r\n\r\n      onMouseOut() {\r\n        this._timer = setTimeout(() => {\r\n          this.showPopper = false;\r\n        }, this.delayOnMouseOut);\r\n      },\r\n\r\n      handleDocumentClick(e) {\r\n        if (!this.$el || !this.referenceElm ||\r\n          this.$el.contains(e.target) ||\r\n          this.referenceElm.contains(e.target) ||\r\n          !this.tooltip || this.tooltip.contains(e.target)\r\n        ) {\r\n          return;\r\n        }\r\n\r\n        this.$emit('documentClick');\r\n\r\n        if (this.forceShow) {\r\n          return;\r\n        }\r\n\r\n        this.showPopper = false;\r\n      }\r\n    },\r\n\r\n    destroyed() {\r\n      this.destroyPopper();\r\n    }\r\n  };\r\n\r\n  export default Tooltip;\r\n  export { Tooltip as mdbTooltip };\r\n</script>\r\n\r\n<style>\r\n  .tooltip {\r\n    width: auto;\r\n    background-color: rgba(0, 0, 0, 0.85);\r\n    color: rgba(242, 239, 239, 0.95);\r\n    text-align: center;\r\n    padding: 0.24em 0.5em;\r\n    display: inline-block;\r\n    border-radius: 3px;\r\n    position: absolute;\r\n    font-size: 0.83em;\r\n    font-weight: normal;\r\n    z-index: 200000;\r\n    opacity: 0;\r\n    transition: opacity 0.2s, visibility 0.2s;\r\n    visibility: hidden;\r\n  }\r\n\r\n  .show > .tooltip {\r\n    opacity: 1;\r\n    visibility: visible;\r\n  }\r\n\r\n  .tooltip .tooltip_arrow {\r\n    width: 0;\r\n    height: 0;\r\n    border-style: solid;\r\n    position: absolute;\r\n    margin: 5px;\r\n  }\r\n  .tooltip[x-placement^=\"top\"] {\r\n    margin-bottom: 5px;\r\n  }\r\n  .tooltip[x-placement^=\"top\"] .tooltip_arrow {\r\n    border-width: 5px 5px 0 5px;\r\n    border-color:  rgba(0, 0, 0, 0.85) transparent transparent transparent;\r\n    bottom: -5px;\r\n    left: calc(50% - 5px);\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n  }\r\n  .tooltip[x-placement^=\"bottom\"] {\r\n    margin-top: 5px;\r\n  }\r\n  .tooltip[x-placement^=\"bottom\"] .tooltip_arrow {\r\n    border-width: 0 5px 5px 5px;\r\n    border-color: transparent transparent rgba(0, 0, 0, 0.85) transparent;\r\n    top: -5px;\r\n    left: calc(50% - 5px);\r\n    margin-top: 0;\r\n    margin-bottom: 0;\r\n  }\r\n  .tooltip[x-placement^=\"right\"] {\r\n    margin-left: 5px;\r\n  }\r\n  .tooltip[x-placement^=\"right\"] .tooltip_arrow {\r\n    border-width: 5px 5px 5px 0;\r\n    border-color: transparent rgba(0, 0, 0, 0.85) transparent transparent;\r\n    left: -5px;\r\n    top: calc(50% - 5px);\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n  }\r\n  .tooltip[x-placement^=\"left\"] {\r\n    margin-right: 5px;\r\n  }\r\n  .tooltip[x-placement^=\"left\"] .tooltip_arrow {\r\n    border-width: 5px 0 5px 5px;\r\n    border-color: transparent transparent transparent rgba(0, 0, 0, 0.85);\r\n    right: -5px;\r\n    top: calc(50% - 5px);\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n  }\r\n</style>\r\n"]}]}