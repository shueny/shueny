{"remainingRequest":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\src\\views\\TodoList.vue?vue&type=template&id=4a06ea3e&","dependencies":[{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\src\\views\\TodoList.vue","mtime":1555992218444},{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"app-todo\" }, [\n    _c(\"div\", { staticClass: \"container\" }, [\n      _c(\"section\", { staticClass: \"header\" }, [\n        _c(\"div\", { staticClass: \"text\" }, [\n          _c(\"span\", {\n            staticClass: \"day\",\n            domProps: { textContent: _vm._s(_vm.day) }\n          }),\n          _c(\"span\", { staticClass: \"yearMonth\" }, [\n            _c(\"b\", {\n              staticClass: \"year\",\n              domProps: { textContent: _vm._s(_vm.year) }\n            }),\n            _c(\"b\", {\n              staticClass: \"month\",\n              domProps: { textContent: _vm._s(_vm.month) }\n            })\n          ]),\n          _c(\"span\", { domProps: { textContent: _vm._s(_vm.timeMessage) } }),\n          _c(\"span\", {\n            staticClass: \"week\",\n            domProps: { textContent: _vm._s(_vm.currentWeek) }\n          })\n        ])\n      ]),\n      _c(\"section\", { staticClass: \"addTask\" }, [\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.newTodo,\n              expression: \"newTodo\"\n            }\n          ],\n          attrs: { placeholder: \"+ Add task\" },\n          domProps: { value: _vm.newTodo },\n          on: {\n            keyup: function($event) {\n              if (\n                !$event.type.indexOf(\"key\") &&\n                _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n              ) {\n                return null\n              }\n              return _vm.addTodo($event)\n            },\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.newTodo = $event.target.value\n            }\n          }\n        }),\n        _c(\"a\", { staticClass: \"btn btn--add\", on: { click: _vm.addTodo } }, [\n          _vm._v(\"+\")\n        ])\n      ]),\n      _c(\"section\", { staticClass: \"content\" }, [\n        _c(\n          \"ul\",\n          { staticClass: \"todoList\" },\n          _vm._l(_vm.filteredTodos, function(item) {\n            return _c(\n              \"li\",\n              {\n                key: item,\n                staticClass: \"list-group-item text-left\",\n                on: {\n                  dblclick: function($event) {\n                    return _vm.editTodo(item)\n                  }\n                }\n              },\n              [\n                item.id !== _vm.cacheTodo.id\n                  ? _c(\"div\", { staticClass: \"d-flex\" }, [\n                      _c(\"div\", { staticClass: \"form-check\" }, [\n                        _c(\n                          \"label\",\n                          {\n                            staticClass: \"form-check-label\",\n                            class: { completed: item.completed },\n                            attrs: { for: item.id }\n                          },\n                          [\n                            _vm._v(_vm._s(item.title) + \"\\n                \"),\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: item.completed,\n                                  expression: \"item.completed\"\n                                }\n                              ],\n                              staticClass: \"form-check-input\",\n                              attrs: { type: \"checkbox\", id: item.id },\n                              domProps: {\n                                checked: Array.isArray(item.completed)\n                                  ? _vm._i(item.completed, null) > -1\n                                  : item.completed\n                              },\n                              on: {\n                                change: function($event) {\n                                  var $$a = item.completed,\n                                    $$el = $event.target,\n                                    $$c = $$el.checked ? true : false\n                                  if (Array.isArray($$a)) {\n                                    var $$v = null,\n                                      $$i = _vm._i($$a, $$v)\n                                    if ($$el.checked) {\n                                      $$i < 0 &&\n                                        _vm.$set(\n                                          item,\n                                          \"completed\",\n                                          $$a.concat([$$v])\n                                        )\n                                    } else {\n                                      $$i > -1 &&\n                                        _vm.$set(\n                                          item,\n                                          \"completed\",\n                                          $$a\n                                            .slice(0, $$i)\n                                            .concat($$a.slice($$i + 1))\n                                        )\n                                    }\n                                  } else {\n                                    _vm.$set(item, \"completed\", $$c)\n                                  }\n                                }\n                              }\n                            }),\n                            _c(\"span\", { staticClass: \"checkmark\" })\n                          ]\n                        )\n                      ]),\n                      _c(\n                        \"button\",\n                        {\n                          staticClass: \"close ml-auto\",\n                          attrs: { type: \"button\", \"aria-label\": \"Close\" },\n                          on: {\n                            click: function($event) {\n                              return _vm.removeTodo(item)\n                            }\n                          }\n                        },\n                        [\n                          _c(\"span\", { attrs: { \"aria-hidden\": \"true\" } }, [\n                            _vm._v(\"Ã—\")\n                          ])\n                        ]\n                      )\n                    ])\n                  : _vm._e(),\n                item.id === _vm.cacheTodo.id\n                  ? _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.cacheTodoTitle,\n                          expression: \"cacheTodoTitle\"\n                        }\n                      ],\n                      staticClass: \"form-control\",\n                      attrs: { type: \"text\" },\n                      domProps: { value: _vm.cacheTodoTitle },\n                      on: {\n                        keyup: [\n                          function($event) {\n                            if (\n                              !$event.type.indexOf(\"key\") &&\n                              _vm._k($event.keyCode, \"esc\", 27, $event.key, [\n                                \"Esc\",\n                                \"Escape\"\n                              ])\n                            ) {\n                              return null\n                            }\n                            return _vm.cancelEdit()\n                          },\n                          function($event) {\n                            if (\n                              !$event.type.indexOf(\"key\") &&\n                              _vm._k(\n                                $event.keyCode,\n                                \"enter\",\n                                13,\n                                $event.key,\n                                \"Enter\"\n                              )\n                            ) {\n                              return null\n                            }\n                            return _vm.doneEdit(item)\n                          }\n                        ],\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.cacheTodoTitle = $event.target.value\n                        }\n                      }\n                    })\n                  : _vm._e()\n              ]\n            )\n          }),\n          0\n        )\n      ]),\n      _c(\"div\", { staticClass: \"filters\" }, [\n        _c(\n          \"button\",\n          {\n            staticClass: \"btn filters__btn filters__btn--all\",\n            class: { active: _vm.visibility == \"all\" },\n            on: {\n              click: function($event) {\n                _vm.visibility = \"all\"\n              }\n            }\n          },\n          [_vm._v(\"All\")]\n        ),\n        _c(\n          \"button\",\n          {\n            staticClass: \"btn filters__btn filters__btn--complete\",\n            class: { active: _vm.visibility == \"completed\" },\n            on: {\n              click: function($event) {\n                _vm.visibility = \"completed\"\n              }\n            }\n          },\n          [_vm._v(\"Complete\")]\n        ),\n        _c(\n          \"button\",\n          {\n            staticClass: \"btn filters__btn filters__btn--incomplete\",\n            class: { active: _vm.visibility == \"doing\" },\n            on: {\n              click: function($event) {\n                _vm.visibility = \"doing\"\n              }\n            }\n          },\n          [_vm._v(\"Incomplete\")]\n        )\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}