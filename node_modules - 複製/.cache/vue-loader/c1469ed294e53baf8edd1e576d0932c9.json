{"remainingRequest":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\src\\components\\TodoList.vue?vue&type=template&id=3de47834&","dependencies":[{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\src\\components\\TodoList.vue","mtime":1556534095999},{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"li\", { staticClass: \"list-group-item text-left\" }, [\n    _c(\"div\", { staticClass: \"d-flex\" }, [\n      _c(\"div\", { staticClass: \"form-check\" }, [\n        _c(\n          \"label\",\n          {\n            staticClass: \"form-check-label\",\n            class: { completed: _vm.item.completed }\n          },\n          [\n            _vm._v(_vm._s(_vm.item.title) + \"\\n          \"),\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.item.completed,\n                  expression: \"item.completed\"\n                }\n              ],\n              staticClass: \"form-check-input\",\n              attrs: { type: \"checkbox\", id: _vm.item.id },\n              domProps: {\n                checked: Array.isArray(_vm.item.completed)\n                  ? _vm._i(_vm.item.completed, null) > -1\n                  : _vm.item.completed\n              },\n              on: {\n                change: function($event) {\n                  var $$a = _vm.item.completed,\n                    $$el = $event.target,\n                    $$c = $$el.checked ? true : false\n                  if (Array.isArray($$a)) {\n                    var $$v = null,\n                      $$i = _vm._i($$a, $$v)\n                    if ($$el.checked) {\n                      $$i < 0 &&\n                        _vm.$set(_vm.item, \"completed\", $$a.concat([$$v]))\n                    } else {\n                      $$i > -1 &&\n                        _vm.$set(\n                          _vm.item,\n                          \"completed\",\n                          $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                        )\n                    }\n                  } else {\n                    _vm.$set(_vm.item, \"completed\", $$c)\n                  }\n                }\n              }\n            }),\n            _c(\"span\", { staticClass: \"checkmark\" })\n          ]\n        )\n      ]),\n      _c(\n        \"button\",\n        {\n          staticClass: \"close ml-auto\",\n          attrs: { type: \"button\", \"aria-label\": \"Close\" },\n          on: {\n            click: function($event) {\n              return _vm.removeTodo(_vm.item)\n            }\n          }\n        },\n        [_c(\"span\", { attrs: { \"aria-hidden\": \"true\" } }, [_vm._v(\"Ã—\")])]\n      )\n    ]),\n    _c(\"div\", { staticClass: \"btnArea\" }, [\n      _c(\n        \"button\",\n        {\n          staticClass: \"btn btn-default btn-calendar\",\n          attrs: { type: \"button\" }\n        },\n        [_c(\"font-awesome-icon\", { attrs: { icon: \"calendar-alt\" } })],\n        1\n      ),\n      _c(\n        \"button\",\n        { staticClass: \"btn btn-default btn-file\", attrs: { type: \"button\" } },\n        [_c(\"font-awesome-icon\", { attrs: { icon: \"file-alt\" } })],\n        1\n      ),\n      _c(\n        \"button\",\n        {\n          key: _vm.item.index,\n          staticClass: \"btn btn-default btn-edit\",\n          attrs: { type: \"button\" },\n          on: {\n            click: function($event) {\n              return _vm.editTodo(_vm.item)\n            }\n          }\n        },\n        [_c(\"font-awesome-icon\", { attrs: { icon: \"edit\" } })],\n        1\n      )\n    ]),\n    _c(\"input\", {\n      directives: [\n        {\n          name: \"model\",\n          rawName: \"v-model\",\n          value: _vm.cacheTodoTitle,\n          expression: \"cacheTodoTitle\"\n        }\n      ],\n      staticClass: \"form-control\",\n      attrs: { type: \"text\" },\n      domProps: { value: _vm.cacheTodoTitle },\n      on: {\n        keyup: [\n          function($event) {\n            if (\n              !$event.type.indexOf(\"key\") &&\n              _vm._k($event.keyCode, \"esc\", 27, $event.key, [\"Esc\", \"Escape\"])\n            ) {\n              return null\n            }\n            return _vm.cancelEdit()\n          },\n          function($event) {\n            if (\n              !$event.type.indexOf(\"key\") &&\n              _vm._k($event.keyCode, \"enter\", 13, $event.key, \"Enter\")\n            ) {\n              return null\n            }\n            return _vm.doneEdit(_vm.item)\n          }\n        ],\n        input: function($event) {\n          if ($event.target.composing) {\n            return\n          }\n          _vm.cacheTodoTitle = $event.target.value\n        }\n      }\n    })\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}