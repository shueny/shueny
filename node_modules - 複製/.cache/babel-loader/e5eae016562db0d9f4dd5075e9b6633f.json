{"remainingRequest":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\mdbvue\\src\\components\\Datatable.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\mdbvue\\src\\components\\Datatable.vue","mtime":499162500000},{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.string.fixed\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Tbl from './Table';\nimport TblHead from './TableHead';\nimport TblBody from './TableBody';\nimport Pagination from './Pagination';\nimport PageItem from './PageItem';\nimport mdbInput from './Input';\nimport DatatableSelect from './DatatableSelect';\nimport DatatableSearch from './DatatableSearch';\nimport mdbIcon from './Fa';\nvar Datatable = {\n  name: 'Datatable',\n  props: {\n    data: {\n      type: [Object, String],\n      default: function _default() {\n        return {\n          columns: [],\n          rows: []\n        };\n      }\n    },\n    autoWidth: {\n      type: Boolean,\n      default: false\n    },\n    bordered: {\n      type: Boolean,\n      default: false\n    },\n    borderless: {\n      type: Boolean,\n      default: false\n    },\n    dark: {\n      type: Boolean,\n      default: false\n    },\n    fixed: {\n      type: Boolean,\n      default: false\n    },\n    headerColor: {\n      type: String\n    },\n    headerWhite: {\n      type: Boolean,\n      default: false\n    },\n    hover: {\n      type: Boolean,\n      default: false\n    },\n    materialInputs: {\n      type: Boolean,\n      default: false\n    },\n    maxWidth: {\n      type: String\n    },\n    maxHeight: {\n      type: String\n    },\n    order: {\n      type: Array\n    },\n    pagination: {\n      type: Boolean,\n      default: true\n    },\n    responsive: {\n      type: Boolean,\n      default: false\n    },\n    responsiveSm: {\n      type: Boolean,\n      default: false\n    },\n    responsiveMd: {\n      type: Boolean,\n      default: false\n    },\n    responsiveLg: {\n      type: Boolean,\n      default: false\n    },\n    responsiveXl: {\n      type: Boolean,\n      default: false\n    },\n    scrollY: {\n      type: Boolean,\n      defautl: false\n    },\n    searching: {\n      type: Boolean,\n      default: true\n    },\n    sorting: {\n      type: Boolean,\n      default: true\n    },\n    striped: {\n      type: Boolean,\n      default: false\n    },\n    start: {\n      type: String,\n      default: 'Start'\n    },\n    end: {\n      type: String,\n      default: 'End'\n    },\n    next: {\n      type: String,\n      default: 'Next'\n    },\n    previous: {\n      type: String,\n      default: 'Previos'\n    },\n    arrows: {\n      type: Boolean,\n      default: false\n    },\n    display: {\n      type: Number,\n      default: 5\n    }\n  },\n  data: function data() {\n    return {\n      rows: this.data.rows || [],\n      columns: this.data.columns || [],\n      options: [10, 25, 50, 100],\n      entries: 10,\n      pages: [],\n      activePage: 0,\n      search: '',\n      tableProps: {\n        autoWidth: this.autoWidth,\n        bordered: this.bordered,\n        borderless: this.borderless,\n        dark: this.dark,\n        fixed: this.fixed,\n        hover: this.hover,\n        responsive: this.responsive,\n        responsiveSm: this.repsonsiveSm,\n        responsiveMd: this.repsonsiveMd,\n        responsiveLg: this.responsiveLg,\n        responsiveXl: this.responsiveXl,\n        striped: this.striped,\n        dtScrollY: this.scrollY,\n        maxHeight: this.maxHeight\n      },\n      wrapperStyle: {\n        maxWidth: this.maxWidth ? this.maxWidth : '100%',\n        margin: '0 auto'\n      }\n    };\n  },\n  components: {\n    DatatableSearch: DatatableSearch,\n    DatatableSelect: DatatableSelect,\n    Tbl: Tbl,\n    TblHead: TblHead,\n    TblBody: TblBody,\n    Pagination: Pagination,\n    PageItem: PageItem,\n    mdbInput: mdbInput,\n    mdbIcon: mdbIcon\n  },\n  computed: {\n    // filter objects by parameters match\n    filteredRows: function filteredRows() {\n      var _this = this;\n\n      return this.rows.filter(function (row) {\n        for (var key in row) {\n          if (Object.prototype.hasOwnProperty.call(row, key)) {\n            var stringValue = row[key].toString();\n            if (stringValue.toLowerCase().match(_this.search.toLowerCase())) return true;\n          }\n        }\n\n        return false;\n      });\n    },\n    visiblePages: function visiblePages() {\n      var start = this.activePage - Math.floor(this.display / 2) > 0 ? this.activePage - Math.floor(this.display / 2) : 0;\n      var end = start + this.display;\n\n      if (end > this.pages.length) {\n        start -= end - this.pages.length;\n        end = this.pages.length;\n      }\n\n      return this.pages.slice(start, end);\n    }\n  },\n  methods: {\n    changePage: function changePage(index) {\n      this.activePage = index;\n    },\n    sort: function sort(field, _sort) {\n      if (this.sorting) {\n        _sort === 'asc' ? this.rows.sort(function (a, b) {\n          return a[field] > b[field] ? 1 : -1;\n        }) : this.rows.sort(function (a, b) {\n          return a[field] > b[field] ? -1 : 1;\n        });\n        this.columns[this.columns.findIndex(function (column) {\n          return column.field === field;\n        })].sort = _sort === 'asc' ? 'desc' : 'asc';\n      }\n    },\n    updateEntries: function updateEntries(value) {\n      this.entries = value;\n    },\n    updateSearch: function updateSearch(value) {\n      this.search = value;\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    // bind data or download form API\n    if (typeof this.data === 'string') {\n      fetch(this.data).then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this2.columns = json.columns;\n        _this2.rows = json.rows;\n\n        _this2.$emit('fields', _this2.columns);\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    } // findout rows amount, and slice it into array (split into pages)\n\n\n    var pagesAmount = Math.ceil(this.filteredRows.length / this.entries);\n    this.pages = [];\n\n    if (this.pagination) {\n      for (var i = 1; i <= pagesAmount; i++) {\n        var pageEndIndex = i * this.entries;\n        this.pages.push(this.filteredRows.slice(pageEndIndex - this.entries, pageEndIndex));\n      }\n    } else {\n      this.pages.push(this.filteredRows);\n    }\n\n    this.activePage = 0; // initial sorting\n\n    if (this.order) {\n      this.sort(this.columns[this.order[0]].field, this.order[1]);\n    }\n\n    this.$emit('pages', this.pages);\n    this.$emit('fields', this.columns);\n  },\n  watch: {\n    entries: function entries() {\n      // do the split every entry change (changing entries amount)\n      var pagesAmount = Math.ceil(this.filteredRows.length / this.entries);\n      this.pages = [];\n\n      for (var i = 1; i <= pagesAmount; i++) {\n        var pageEndIndex = i * this.entries;\n        this.pages.push(this.filteredRows.slice(pageEndIndex - this.entries, pageEndIndex));\n      }\n\n      this.activePage = this.activePage < this.pages.length ? this.activePage : this.pages.length - 1;\n      this.$emit('pages', this.pages);\n    },\n    filteredRows: function filteredRows() {\n      // do the split on every change in rows (searching)\n      var pagesAmount = Math.ceil(this.filteredRows.length / this.entries);\n      this.pages = [];\n\n      if (this.pagination) {\n        for (var i = 1; i <= pagesAmount; i++) {\n          var pageEndIndex = i * this.entries;\n          this.pages.push(this.filteredRows.slice(pageEndIndex - this.entries, pageEndIndex));\n        }\n      } else {\n        this.pages.push(this.filteredRows);\n      }\n\n      this.activePage = 0;\n      this.$emit('pages', this.pages);\n    }\n  }\n};\nexport default Datatable;\nexport { Datatable as mdbDatatable };",{"version":3,"sources":["Datatable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div class=\"dataTables_wrapper\" :style=\"wrapperStyle\">\r\n    <!-- Entries input and search -->\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-12 col-md-6\">\r\n        <div v-if=\"pagination\">\r\n          <datatable-select @getValue=\"updateEntries\" :options=\"options\" />\r\n        </div>\r\n      </div>\r\n\r\n      <div v-if=\"searching\" class=\"col-sm-12 col-md-6\">\r\n        <datatable-search @getValue=\"updateSearch\" />\r\n      </div>\r\n    </div>\r\n    <!-- Entries input and search -->\r\n\r\n    <!-- Main table -->\r\n    <tbl v-if=\"!scrollY\" v-bind=\"tableProps\" sm datatable>\r\n      <tbl-head :color=\"headerColor\" :textWhite=\"headerWhite\">\r\n        <tr>\r\n          <th\r\n            v-for=\"column in columns\"\r\n            :key=\"column.field\"\r\n            class=\"th-sm sorting\"\r\n            v-on:click=\"sort(column.field, column.sort)\"\r\n          >\r\n            {{column.label}} <i class=\"fas fa-sort float-right\"></i>\r\n          </th>\r\n        </tr>\r\n      </tbl-head>\r\n      <tbl-body>\r\n        <tr v-for=\"row in pages[activePage]\" :key=\"row.id\">\r\n          <td v-for=\"(value, key) in row\" :key=\"key\">\r\n            {{value}}\r\n          </td>\r\n        </tr>\r\n        <tr v-if=\"!pages.length\">\r\n          <td :colspan=\"columns.length\">No matching records found</td>\r\n        </tr>\r\n      </tbl-body>\r\n      <tbl-head tag=\"tfoot\">\r\n        <tr>\r\n          <th\r\n            v-for=\"column in columns\"\r\n            :key=\"column.field+'_foot'\"\r\n            class=\"th-sm sorting\"\r\n          >\r\n            {{column.label}}\r\n          </th>\r\n        </tr>\r\n      </tbl-head>\r\n    </tbl>\r\n    <!-- Main table -->\r\n\r\n    <!-- ScrollY table -->\r\n    <div v-if=\"scrollY\" class=\"dataTables_scroll\">\r\n      <div v-if=\"scrollY\" class=\"dataTables_scrollHead\" style=\"padding-right: 15px\">\r\n        <div class=\"dataTables_scrollHeadInner\">\r\n          <tbl v-bind=\"tableProps\" sm datatable>\r\n            <tbl-head :color=\"headerColor\" :textWhite=\"headerWhite\">\r\n              <tr>\r\n                <th\r\n                  v-for=\"column in columns\"\r\n                  :key=\"column.field\"\r\n                  class=\"th-sm sorting\"\r\n                  v-on:click=\"sort(column.field, column.sort)\"\r\n                >\r\n                  {{column.label}} <i class=\"fas fa-sort float-right\"></i>\r\n                </th>\r\n              </tr>\r\n            </tbl-head>\r\n          </tbl>\r\n        </div>\r\n      </div>\r\n      <tbl v-bind=\"tableProps\" sm datatable>\r\n        <tbl-body>\r\n          <tr v-for=\"row in pages[activePage]\" :key=\"row.id\">\r\n            <td v-for=\"(value, key) in row\" :key=\"key\">\r\n              {{value}}\r\n            </td>\r\n          </tr>\r\n          <tr v-if=\"!pages.length\">\r\n            <td :colspan=\"columns.length\">No matching records found</td>\r\n          </tr>\r\n        </tbl-body>\r\n      </tbl>\r\n      <div class=\"dataTables_scrollFoot\" style=\"padding-right: 15px\">\r\n        <div class=\"dataTables_scrollFootInner\">\r\n          <tbl v-bind=\"tableProps\" sm datatable>\r\n            <tbl-head tag=\"tfoot\">\r\n              <tr>\r\n                <th\r\n                  v-for=\"column in columns\"\r\n                  :key=\"column.field+'_foot'\"\r\n                  class=\"th-sm sorting\"\r\n                >\r\n                  {{column.label}}\r\n                </th>\r\n              </tr>\r\n            </tbl-head>\r\n          </tbl>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- ScrollY table -->\r\n\r\n    <!-- Labels and pagination -->\r\n    <div v-if=\"pagination\" class=\"row\">\r\n      <div class=\"col-sm-12 col-md-5\">\r\n        <div class=\"dataTables_info\" role=\"status\" aria-live=\"polite\">\r\n          Showing {{activePage > 0 ? activePage*entries : activePage+1}} to {{pages.length-1 > activePage ? pages[activePage].length*(activePage+1) : filteredRows.length}} of {{filteredRows.length}} entries\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-12 col-md-7\">\r\n        <div class=\"dataTables_paginate float-right\">\r\n          <pagination id=\"pagination\">\r\n            <page-item\r\n              v-if=\"pages.length > display\"\r\n              v-on:click.native=\"changePage(0)\"\r\n              :disabled=\"activePage === 0 ? true : false\"\r\n            >\r\n              <mdb-icon v-if=\"arrows\"  icon=\"angle-double-left\" />\r\n              <p v-else class=\"pagination\">{{start}}</p>\r\n            </page-item>\r\n            <page-item\r\n              v-on:click.native=\"changePage(activePage-1)\"\r\n              :disabled=\"activePage === 0 ? true : false\"\r\n            >\r\n              <mdb-icon v-if=\"arrows\"  icon=\"angle-left\" />\r\n              <p v-else class=\"pagination\">{{previous}}</p>\r\n            </page-item>\r\n            <page-item\r\n              v-for=\"(page, index) in visiblePages\"\r\n              :key=\"index\"\r\n              v-on:click.native=\"changePage(pages.indexOf(visiblePages[index]))\"\r\n              :active=\"activePage === pages.indexOf(visiblePages[index]) ? true : false\"\r\n            >\r\n              {{pages.indexOf(visiblePages[index])+1}}\r\n            </page-item>\r\n            <page-item\r\n              v-on:click.native=\"changePage(activePage+1)\"\r\n              :disabled=\"activePage === pages.length-1 ? true : false\"\r\n            >\r\n              <mdb-icon v-if=\"arrows\"  icon=\"angle-right\" />\r\n              <p v-else class=\"pagination\">{{next}}</p>\r\n            </page-item>\r\n            <page-item\r\n              v-if=\"pages.length > display\"\r\n              v-on:click.native=\"changePage(pages.length-1)\"\r\n              :disabled=\"activePage === pages.length-1 ? true : false\"\r\n            >\r\n              <mdb-icon v-if=\"arrows\"  icon=\"angle-double-right\" />\r\n              <p v-else class=\"pagination\">{{end}}</p>\r\n            </page-item>\r\n          </pagination>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Labels and pagination -->\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Tbl from './Table';\r\nimport TblHead from './TableHead';\r\nimport TblBody from './TableBody';\r\nimport Pagination from './Pagination';\r\nimport PageItem from './PageItem';\r\nimport mdbInput from './Input';\r\nimport DatatableSelect from './DatatableSelect';\r\nimport DatatableSearch from './DatatableSearch';\r\nimport mdbIcon from './Fa';\r\n\r\nconst Datatable = {\r\n  name: 'Datatable',\r\n  props: {\r\n    data: {\r\n      type: [Object, String],\r\n      default: () => ({\r\n        columns: [],\r\n        rows: []\r\n      })\r\n    },\r\n    autoWidth: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    bordered: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    borderless: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    dark: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    fixed: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    headerColor: {\r\n      type: String\r\n    },\r\n    headerWhite: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    hover: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    materialInputs: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    maxWidth: {\r\n      type: String\r\n    },\r\n    maxHeight: {\r\n      type: String\r\n    },\r\n    order: {\r\n      type: Array\r\n    },\r\n    pagination: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    responsive: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    responsiveSm: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    responsiveMd: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    responsiveLg: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    responsiveXl: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    scrollY: {\r\n      type: Boolean,\r\n      defautl: false\r\n    },\r\n    searching: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    sorting: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    striped: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    start: {\r\n      type: String,\r\n      default: 'Start'\r\n    },\r\n    end: {\r\n      type: String,\r\n      default: 'End'\r\n    },\r\n    next: {\r\n      type: String,\r\n      default: 'Next'\r\n    },\r\n    previous: {\r\n      type: String,\r\n      default: 'Previos'\r\n    },\r\n    arrows: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    display: {\r\n      type: Number,\r\n      default: 5\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      rows: this.data.rows || [],\r\n      columns: this.data.columns || [],\r\n      options: [10, 25, 50, 100],\r\n      entries: 10,\r\n      pages: [],\r\n      activePage: 0,\r\n      search: '',\r\n      tableProps: {\r\n        autoWidth: this.autoWidth,\r\n        bordered: this.bordered,\r\n        borderless: this.borderless,\r\n        dark: this.dark,\r\n        fixed: this.fixed,\r\n        hover: this.hover,\r\n        responsive: this.responsive,\r\n        responsiveSm: this.repsonsiveSm,\r\n        responsiveMd: this.repsonsiveMd,\r\n        responsiveLg: this.responsiveLg,\r\n        responsiveXl: this.responsiveXl,\r\n        striped: this.striped,\r\n        dtScrollY: this.scrollY,\r\n        maxHeight: this.maxHeight\r\n      },\r\n      wrapperStyle: {\r\n        maxWidth: this.maxWidth ? this.maxWidth : '100%',\r\n        margin: '0 auto'\r\n      }\r\n    };\r\n  },\r\n  components: {\r\n    DatatableSearch,\r\n    DatatableSelect,\r\n    Tbl,\r\n    TblHead,\r\n    TblBody,\r\n    Pagination,\r\n    PageItem,\r\n    mdbInput,\r\n    mdbIcon\r\n  },\r\n  computed: {\r\n    // filter objects by parameters match\r\n    filteredRows() {\r\n      return this.rows.filter(row => {\r\n        for (let key in row) {\r\n          if (Object.prototype.hasOwnProperty.call(row, key)) {\r\n            const stringValue = row[key].toString();\r\n            if (stringValue.toLowerCase().match(this.search.toLowerCase())) return true;\r\n          }\r\n        }\r\n        return false;\r\n      });\r\n    },\r\n    visiblePages() {\r\n      let start = this.activePage - Math.floor(this.display/2) > 0 ? this.activePage - Math.floor(this.display/2) : 0;\r\n      let end = start + this.display;\r\n      if (end > this.pages.length) {\r\n        start -= (end - this.pages.length);\r\n        end = this.pages.length;\r\n      }\r\n      return this.pages.slice(start, end);\r\n    }\r\n  },\r\n  methods: {\r\n    changePage(index) {\r\n      this.activePage = index;\r\n    },\r\n    sort(field, sort) {\r\n      if (this.sorting) {\r\n        sort === 'asc' ?\r\n          this.rows.sort((a, b) => (a[field] > b[field] ? 1 : -1)) :\r\n          this.rows.sort((a, b) => (a[field] > b[field] ? -1 : 1));\r\n        this.columns[this.columns.findIndex(column => column.field === field)].sort = sort === 'asc' ? 'desc' : 'asc';\r\n      }\r\n    },\r\n    updateEntries(value) {\r\n      this.entries = value;\r\n    },\r\n    updateSearch(value) {\r\n      this.search = value;\r\n    }\r\n  },\r\n  mounted() {\r\n    // bind data or download form API\r\n    if (typeof this.data === 'string') {\r\n      fetch(this.data)\r\n        .then(res => res.json())\r\n        .then(json => {\r\n          this.columns = json.columns;\r\n          this.rows = json.rows;\r\n          this.$emit('fields', this.columns);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }\r\n\r\n    // findout rows amount, and slice it into array (split into pages)\r\n    const pagesAmount = Math.ceil(this.filteredRows.length / this.entries);\r\n    this.pages = [];\r\n    if (this.pagination) {\r\n      for (let i=1; i<=pagesAmount; i++) {\r\n        const pageEndIndex = i*this.entries;\r\n        this.pages.push(this.filteredRows.slice(pageEndIndex-this.entries, pageEndIndex));\r\n      }\r\n    }\r\n    else {\r\n      this.pages.push(this.filteredRows);\r\n    }\r\n    this.activePage = 0;\r\n\r\n    // initial sorting\r\n    if (this.order) {\r\n      this.sort(this.columns[this.order[0]].field, this.order[1]);\r\n    }\r\n\r\n    this.$emit('pages', this.pages);\r\n    this.$emit('fields', this.columns);\r\n  },\r\n  watch: {\r\n    entries() {\r\n      // do the split every entry change (changing entries amount)\r\n      const pagesAmount = Math.ceil(this.filteredRows.length / this.entries);\r\n      this.pages = [];\r\n      for (let i=1; i<=pagesAmount; i++) {\r\n        const pageEndIndex = i*this.entries;\r\n        this.pages.push(this.filteredRows.slice(pageEndIndex-this.entries, pageEndIndex));\r\n      }\r\n      this.activePage = this.activePage < this.pages.length ? this.activePage : this.pages.length-1;\r\n\r\n      this.$emit('pages', this.pages);\r\n    },\r\n    filteredRows() {\r\n      // do the split on every change in rows (searching)\r\n      const pagesAmount = Math.ceil(this.filteredRows.length / this.entries);\r\n      this.pages = [];\r\n      if (this.pagination) {\r\n        for (let i=1; i<=pagesAmount; i++) {\r\n          const pageEndIndex = i*this.entries;\r\n          this.pages.push(this.filteredRows.slice(pageEndIndex-this.entries, pageEndIndex));\r\n        }\r\n      }\r\n      else {\r\n        this.pages.push(this.filteredRows);\r\n      }\r\n      this.activePage = 0;\r\n\r\n      this.$emit('pages', this.pages);\r\n    }\r\n  }\r\n};\r\n\r\nexport default Datatable;\r\nexport { Datatable as mdbDatatable };\r\n</script>\r\n\r\n<style scoped>\r\n.dataTables-scrollBody {\r\n  display: block;\r\n  overflow-y: auto;\r\n  -ms-overflow-style: -ms-autohiding-scrollbar;\r\n}\r\n\r\n.dataTables-scrollBody td,\r\n.dataTables-scrollBody th {\r\n  white-space: nowrap;\r\n}\r\n</style>\r\n\r\n<style>\r\n.dataTables_wrapper select {\r\n  display: inline-flex !important;\r\n  width: auto;\r\n}\r\n.dataTables_wrapper input {\r\n  display: inline-flex !important;\r\n  width: auto;\r\n}\r\n.pagination {\r\n  margin-bottom: 0px;\r\n}\r\n</style>\r\n"],"sourceRoot":"node_modules/mdbvue/src/components"}]}