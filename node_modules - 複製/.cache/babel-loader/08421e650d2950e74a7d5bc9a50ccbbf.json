{"remainingRequest":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\src\\views\\Todo.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\src\\views\\Todo.vue","mtime":1556534594551},{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Shueny\\OneDrive\\github\\side-projects\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"C:\\\\Users\\\\Shueny\\\\OneDrive\\\\github\\\\side-projects\\\\node_modules\\\\@babel\\\\runtime-corejs2/helpers/esm/defineProperty\";\nimport \"core-js/modules/es6.array.find-index\";\nimport _JSON$stringify from \"C:\\\\Users\\\\Shueny\\\\OneDrive\\\\github\\\\side-projects\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/json/stringify\";\nimport \"core-js/modules/web.dom.iterable\";\n\nvar _methods;\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TodoList from '@/components/TodoList';\n\nvar moment = require('moment');\n\nvar STORAGE_KEY = 'todos-vuejs'; // 名稱\n\nvar todoStorage = {\n  fetch: function fetch() {\n    var todos = JSON.parse(localStorage.getItem(STORAGE_KEY) || '[]');\n    todos.forEach(function (todo, index) {\n      todo.id = index;\n    });\n    todoStorage.uid = todos.length;\n    return todos;\n  },\n  save: function save(todos) {\n    localStorage.setItem(STORAGE_KEY, _JSON$stringify(todos));\n  }\n};\nexport default {\n  name: 'Todo',\n  components: {\n    TodoList: TodoList\n  },\n  data: function data() {\n    return {\n      newTodo: '',\n      todos: [{\n        id: '11',\n        title: '要買蘿蔔',\n        completed: false,\n        comments: ['6:00pm', 'the new restaurant']\n      }],\n      cacheTodo: {},\n      cacheTodoTitle: '',\n      visibility: 'all',\n      day: moment().format('DD'),\n      year: moment().format('YYYY'),\n      month: moment().format('MMM'),\n      currentWeek: moment().format('ddd'),\n      timeMessage: moment().format('LTS')\n    };\n  },\n  methods: (_methods = {\n    getTodos: function getTodos() {\n      if (localStorage.getItem('todos-vuejs')) {\n        this.todos = JSON.parse(localStorage.getItem('todos-vuejs'));\n      }\n    },\n    addTodo: function addTodo(e) {\n      // validation check\n      if (this.newTodo) {\n        this.todos.unshift({\n          id: this.todos.length,\n          title: this.newTodo,\n          completed: false\n        });\n      } // reset newTodo\n\n\n      this.newTodo = ''; // save the new item in localstorage\n\n      return true;\n    },\n    updateCurrentTime: function updateCurrentTime() {\n      this.timeMessage = moment().format('LTS');\n    },\n    cancelEdit: function cancelEdit() {\n      this.cacheTodo = {};\n    },\n    removeTodo: function removeTodo(todo) {\n      var vm = this; // findIndex 是個比較簡單找到 index 的方式，會把回傳為 true 的 index 位置，存到前方(newIndex)的變數之中\n\n      var newIndex = vm.todos.findIndex(function (item, key) {\n        return todo.id === item.id;\n      });\n      this.todos.splice(newIndex, 1);\n    },\n    editTodo: function editTodo(item) {\n      console.log(item.title);\n      this.cacheTodo = item;\n      this.cacheTodoTitle = item.title;\n    }\n  }, _defineProperty(_methods, \"cancelEdit\", function cancelEdit() {\n    this.cacheTodo = {};\n  }), _defineProperty(_methods, \"doneEdit\", function doneEdit(item) {\n    item.title = this.cacheTodoTitle;\n    this.cacheTodoTitle = '';\n    this.cacheTodo = {};\n  }), _defineProperty(_methods, \"deleteTodos\", function deleteTodos() {\n    this.todos = [];\n  }), _methods),\n  computed: {\n    filteredTodos: function filteredTodos() {\n      if (this.visibility === 'all') {\n        return this.todos;\n      }\n\n      if (this.visibility === 'doing') {\n        var newTodo = [];\n        this.todos.forEach(function (item) {\n          if (!item.completed) {\n            newTodo.push(item);\n          }\n        });\n        return newTodo;\n      }\n\n      if (this.visibility === 'completed') {\n        newTodo = [];\n        this.todos.forEach(function (item) {\n          if (item.completed) {\n            newTodo.push(item);\n          }\n        });\n        return newTodo;\n      }\n    },\n    remaining: function remaining() {\n      return this.todos.filter(function (item) {\n        return !item.completed;\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.getTodos();\n  },\n  watch: {\n    todos: {\n      handler: function handler(updatedList) {\n        localStorage.setItem('todos-vuejs', _JSON$stringify(updatedList));\n      },\n      deep: true\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    this.timeMessage = moment().format('LTS');\n    setInterval(function () {\n      return _this.updateCurrentTime();\n    }, 1 * 1000);\n  }\n};",{"version":3,"sources":["Todo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"app-todo\">\n    <div class=\"container\">\n      <section class=\"header\">\n        <div class=\"text\">\n          <span class=\"day\" v-text=\"day\"> </span>\n          <span class=\"yearMonth\"><b class=\"year\" v-text=\"year\"></b><b class=\"month\" v-text=\"month\"> </b></span>\n          <span v-text=\"timeMessage\"></span><span class=\"week\" v-text=\"currentWeek\"> </span>\n        </div>\n      </section>\n      <section class=\"addTask\">\n        <input placeholder=\"+ Add task\" v-model=\"newTodo\" @keyup.enter=\"addTodo\"/>\n          <a class=\"btn btn--add\" @click=\"addTodo\">+</a>\n      </section>\n      <section class=\"content\">\n        <div>\n          <ul class=\"todoList\">\n            <TodoList \n             v-for='item in filteredTodos' \n             :index='item.index' \n             :item='item' \n             @cancel-item='cancelEdit'\n             @remove-todo='removeTodo'\n             @edit-todo='editTodo'\n             @done-edit='done-edit'\n             @delete-todo='deleteTodos'\n            ></TodoList>\n            <!-- <li class=\"list-group-item text-left\" v-for='item in filteredTodos' :key='item' @dblclick=\"editTodo(item)\">\n              <div class=\"d-flex\" v-if=\"item.id !== cacheTodo.id\">\n                <div class=\"form-check\">\n                  <label class=\"form-check-label\" :class=\"{'completed': item.completed }\" :for=\"item.id\">{{ item.title }}\n                    <input class=\"form-check-input\" type=\"checkbox\" v-model=\"item.completed\" :id=\"item.id\"/><span class=\"checkmark\"></span>\n                  </label>\n                </div>\n                <button class=\"close ml-auto\" type=\"button\" aria-label=\"Close\" @click=\"removeTodo(item)\"><span aria-hidden=\"true\">&times;</span></button>\n              </div>\n              <input class=\"form-control\" type=\"text\" v-model=\"cacheTodoTitle\" @keyup.esc=\"cancelEdit()\" @keyup.enter=\"doneEdit(item)\" v-if=\"item.id === cacheTodo.id\"/>\n            </li> -->\n          </ul>\n        </div>\n      </section>\n      <div class=\"filters\">\n        <button class=\"btn filters__btn filters__btn--all\" :class=\"{'active': visibility == 'all'}\" @click=\"visibility = 'all'\">All</button>\n        <button class=\"btn filters__btn filters__btn--complete\" :class=\"{'active': visibility == 'completed'}\" @click=\"visibility = 'completed'\">Complete</button>\n        <button class=\"btn filters__btn filters__btn--incomplete\" :class=\"{'active': visibility == 'doing'}\" @click=\"visibility = 'doing'\">Incomplete</button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style lang=\"scss\" scope>\n@import '@/assets/scss/_todo.scss';\n</style>\n\n<script>\nimport TodoList from '@/components/TodoList'\n\nconst moment = require('moment')\n\nconst STORAGE_KEY = 'todos-vuejs'// 名稱\nvar todoStorage = {\n  fetch () {\n    const todos = JSON.parse(localStorage.getItem(STORAGE_KEY) || '[]')\n    todos.forEach((todo, index) => {\n      todo.id = index\n    })\n    todoStorage.uid = todos.length\n    return todos\n  },\n  save (todos) {\n    localStorage.setItem(STORAGE_KEY, JSON.stringify(todos))\n  }\n}\n\nexport default {\n  name: 'Todo',\n  components: { TodoList },\n  data () {\n    return {\n      newTodo: '',\n      todos: [\n        {\n          id: '11',\n          title: '要買蘿蔔',\n          completed: false,\n          comments: ['6:00pm', 'the new restaurant']\n        }\n      ],\n      cacheTodo: {},\n      cacheTodoTitle: '',\n      visibility: 'all',\n      day: moment().format('DD'),\n      year: moment().format('YYYY'),\n      month: moment().format('MMM'),\n      currentWeek: moment().format('ddd'),\n      timeMessage: moment().format('LTS')\n    }\n  },\n  methods: {\n    getTodos () {\n      if (localStorage.getItem('todos-vuejs')) {\n        this.todos = JSON.parse(localStorage.getItem('todos-vuejs'))\n      }\n    },\n    addTodo (e) {\n      // validation check\n      if (this.newTodo) {\n        this.todos.unshift({\n          id: this.todos.length,\n          title: this.newTodo,\n          completed: false\n        })\n      }\n      // reset newTodo\n      this.newTodo = ''\n      // save the new item in localstorage\n      return true\n    },\n    updateCurrentTime () {\n      this.timeMessage = moment().format('LTS')\n    },\n    cancelEdit() {\n      this.cacheTodo = {}\n    },\n    removeTodo (todo) {\n      const vm = this\n      // findIndex 是個比較簡單找到 index 的方式，會把回傳為 true 的 index 位置，存到前方(newIndex)的變數之中\n      const newIndex = vm.todos.findIndex((item, key) => todo.id === item.id)\n      this.todos.splice(newIndex, 1)\n    },\n    editTodo (item) {\n      console.log(item.title)\n      this.cacheTodo = item\n      this.cacheTodoTitle = item.title\n    },\n    cancelEdit () {\n      this.cacheTodo = {}\n    },\n    doneEdit (item) {\n      item.title = this.cacheTodoTitle\n      this.cacheTodoTitle = ''\n      this.cacheTodo = {}\n    },\n    deleteTodos () {\n      this.todos = []\n    }\n  },\n  computed: {\n    filteredTodos () {\n      if (this.visibility === 'all') {\n        return this.todos\n      } if (this.visibility === 'doing') {\n        var newTodo = []\n        this.todos.forEach((item) => {\n          if (!item.completed) {\n            newTodo.push(item)\n          }\n        })\n        return newTodo\n      } if (this.visibility === 'completed') {\n        newTodo = []\n        this.todos.forEach((item) => {\n          if (item.completed) {\n            newTodo.push(item)\n          }\n        })\n        return newTodo\n      }\n    },\n    remaining () {\n      return this.todos.filter(item => !item.completed)\n    }\n  },\n  mounted () {\n    this.getTodos()\n  },\n  watch: {\n    todos: {\n      handler (updatedList) {\n        localStorage.setItem('todos-vuejs', JSON.stringify(updatedList))\n      },\n      deep: true\n    }\n  },\n  created () {\n    this.timeMessage = moment().format('LTS')\n    setInterval(() => this.updateCurrentTime(), 1 * 1000)\n  }\n}\n</script>\n"],"sourceRoot":"src/views"}]}